<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Nimap-assessment</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-50 p-6">
    <!-- Header -->
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">Categories-Master page</h1>
      <div>
        <button
          id="openCategoryModal"
          class="bg-blue-600 text-white px-4 py-2 rounded-xl hover:bg-blue-700"
        >
          Add Category
        </button>
        <button
          id="openProductMaster"
          class="border px-4 py-2 rounded-xl hover:bg-gray-100"
        >
          product Master
        </button>
      </div>
    </div>

    <!-- Table -->
    <div class="bg-white shadow-lg rounded-2xl overflow-x-auto">
      <table class="w-full border-collapse">
        <thead>
          <tr class="bg-gray-100 text-left">
            <th class="p-3 border">CategoryId</th>
            <th class="p-3 border">CategoryName</th>
            <th class="p-3 border">Description</th>
            <th class="p-3 border">Actions</th>
          </tr>
        </thead>
        <tbody id="categoryTableBody"></tbody>
      </table>
    </div>

    <!-- Pagination -->
    <div
      id="categoryPagination"
      class="flex justify-center space-x-2 mt-6"
    ></div>

    <!-- Category Modal -->
    <div
      id="categoryModal"
      class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center"
    >
      <div class="bg-white p-6 rounded-2xl shadow-lg w-96">
        <h2 class="text-xl font-bold mb-4">Add / Edit Category</h2>
        <form id="categoryForm" class="space-y-4">
          <input type="hidden" id="editCategoryId" />
          <div>
            <label class="block mb-1 font-medium">Category Name</label>
            <input
              type="text"
              id="categoryName"
              required
              class="w-full border rounded-lg px-3 py-2"
            />
          </div>
          <div>
            <label class="block mb-1 font-medium">Description</label>
            <textarea
              id="categoryDescription"
              required
              class="w-full border rounded-lg px-3 py-2"
            ></textarea>
          </div>
          <div class="flex justify-end space-x-2">
            <button
              type="button"
              id="closeCategoryModal"
              class="border px-4 py-2 rounded-lg hover:bg-gray-100"
            >
              Cancel
            </button>
            <button
              type="submit"
              class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
            >
              Save
            </button>
          </div>
        </form>
      </div>
    </div>

    <script>
      let categoryCurrentPage = 1;
      let categoryHasNext = true;

      async function fetchCategories(page = 1) {
        const res = await fetch(
          `http://localhost:9000/api/category/list/${page}`
        );
        const result = await res.json();
        const categories = result.payload.categorys;
        categoryHasNext = result.payload.isnext;
        renderCategoryTable(categories);
        renderCategoryPagination();
      }

      function renderCategoryTable(categories) {
        const tableBody = document.getElementById("categoryTableBody");
        tableBody.innerHTML = "";
        categories.forEach((cat) => {
          const row = document.createElement("tr");
          row.className = "hover:bg-gray-50";
          row.innerHTML = `
            <td class="p-3 border">${cat.id}</td>
            <td class="p-3 border">${cat.name}</td>
            <td class="p-3 border">${cat.description}</td>
            <td class="p-3 border space-x-2">
              <button class="text-blue-600 hover:underline" onclick="editCategory(${cat.id}, '${cat.name}', '${cat.description}')">Edit</button>
              <button class="text-red-600 hover:underline" onclick="deleteCategory(${cat.id})">Delete</button>
            </td>
          `;
          tableBody.appendChild(row);
        });
      }

      function renderCategoryPagination() {
        const pagination = document.getElementById("categoryPagination");
        pagination.innerHTML = "";

        const prevBtn = document.createElement("button");
        prevBtn.textContent = "Prev";
        prevBtn.className = "border px-4 py-2 rounded-xl hover:bg-gray-100";
        prevBtn.disabled = categoryCurrentPage === 1;
        if (prevBtn.disabled)
          prevBtn.classList.add("opacity-50", "cursor-not-allowed");
        prevBtn.onclick = () => {
          categoryCurrentPage--;
          fetchCategories(categoryCurrentPage);
        };
        pagination.appendChild(prevBtn);

        const pageLabel = document.createElement("span");
        pageLabel.textContent = `Page ${categoryCurrentPage}`;
        pageLabel.className = "px-4 py-2";
        pagination.appendChild(pageLabel);

        const nextBtn = document.createElement("button");
        nextBtn.textContent = "Next";
        nextBtn.className = "border px-4 py-2 rounded-xl hover:bg-gray-100";
        nextBtn.disabled = !categoryHasNext;
        if (nextBtn.disabled)
          nextBtn.classList.add("opacity-50", "cursor-not-allowed");
        nextBtn.onclick = () => {
          categoryCurrentPage++;
          fetchCategories(categoryCurrentPage);
        };
        pagination.appendChild(nextBtn);
      }

      // ---------------- EDIT CATEGORY ----------------
      function editCategory(id, name, description) {
        document.getElementById("editCategoryId").value = id;
        document.getElementById("categoryName").value = name;
        document.getElementById("categoryDescription").value = description;
        document.getElementById("categoryModal").classList.remove("hidden");
      }

      // ---------------- DELETE CATEGORY ----------------
      async function deleteCategory(id) {
        if (confirm("Are you sure you want to delete this category?")) {
          await fetch(`http://localhost:9000/api/category/delete?id=${id}`, {
            method: "DELETE",
          });
          alert("Category deleted!");
          fetchCategories(categoryCurrentPage);
        }
      }

      //  product navigation
      document.getElementById("openProductMaster").onclick = () => {
        window.location.href = "/";
      };

      // ---------------- MODAL ----------------
      const categoryModal = document.getElementById("categoryModal");
      document.getElementById("openCategoryModal").onclick = () => {
        document.getElementById("editCategoryId").value = "";
        document.getElementById("categoryForm").reset();
        categoryModal.classList.remove("hidden");
      };
      document.getElementById("closeCategoryModal").onclick = () =>
        categoryModal.classList.add("hidden");

      document.getElementById("categoryForm").onsubmit = async (e) => {
        e.preventDefault();
        const id = document.getElementById("editCategoryId").value;
        const name = document.getElementById("categoryName").value;
        const desc = document.getElementById("categoryDescription").value;

        if (id) {
          // UPDATE
          await fetch(`http://localhost:9000/api/category/update/${id}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ name: name, description: desc }),
          });
          alert("Category updated: " + name);
        } else {
          // ADD
          await fetch("http://localhost:9000/api/category/add", {
            method: "put",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ name: name, description: desc }),
          });
          alert("Category added: " + name);
        }

        document.getElementById("categoryForm").reset();
        categoryModal.classList.add("hidden");
        fetchCategories(categoryCurrentPage);
      };

      // Initial load
      fetchCategories(categoryCurrentPage);
    </script>
  </body>
</html>
